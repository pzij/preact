{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://preact/./src/preact.js","webpack://preact/./example/index.js"],"sourcesContent":["const EMPTY = {};\r\nconst NO_RENDER = { render: false };\r\nconst SYNC_RENDER = { renderSync: true };\r\nconst DOM_RENDER = { build: true };\r\nconst EMPTY_BASE = '';\r\nconst NON_DIMENSION_PROPS = {};\r\n\r\n'boxFlex boxFlexGroup columnCount fillOpacity flex flexGrow flexPositive flexShrink flexNegative fontWeight lineClamp lineHeight opacity order orphans strokeOpacity widows zIndex zoom'.split(' ').forEach(k => NON_DIMENSION_PROPS[k] = true);\r\n\r\n/** @private */\r\nlet slice = Array.prototype.slice;\r\n\r\n/** @private */\r\nlet memoize = (fn, mem={}) => k => mem.hasOwnProperty(k) ? mem[k] : (mem[k] = fn(k));\r\n\r\n/** @public @object Global options */\r\nlet options = {\r\n\t/** If `true`, `prop` changes trigger synchronous component updates. */\r\n\tsyncComponentUpdates: true\r\n};\r\n\r\n/** @public @object Global hook methods */\r\nlet hooks = {};\r\n\r\n\r\n/** @public Render JSX into a `parent` Element. */\r\nexport function render(component, parent) {\r\n\tlet built = build(null, component),\r\n\t\tc = built._component;\r\n\tif (c) hook(c, 'componentWillMount');\r\n\tparent.appendChild(built);\r\n\tif (c) hook(c, 'componentDidMount');\r\n\treturn build;\r\n}\r\n\r\n\r\n/** @protected Processes all created VNodes */\r\nhooks.vnode = ({ attributes }) => {\r\n\tif (!attributes) return;\r\n\r\n\tlet s = attributes.style;\r\n\tif (s && !s.substring) {\r\n\t\tattributes.style = styleObjToCss(s);\r\n\t}\r\n\r\n\tlet c = attributes['class'];\r\n\tif (attributes.hasOwnProperty('className')) {\r\n\t\tc = attributes['class'] = attributes.className;\r\n\t\tdelete attributes.className;\r\n\t}\r\n\tif (c && !c.substring) {\r\n\t\tattributes['class'] = hashToClassName(c);\r\n\t}\r\n};\r\n\r\n\r\n/** @public Base Component, with API similar to React. */\r\nexport class Component {\r\n\tconstructor() {\r\n\t\t/** @private */\r\n\t\tthis._dirty = this._disableRendering = false;\r\n\t\t/** @public */\r\n\t\tthis.nextProps = this.base = null;\r\n\t\t/** @type {object} */\r\n\t\tthis.props = hook(this, 'getDefaultProps') || {};\r\n\t\t/** @type {object} */\r\n\t\tthis.state = hook(this, 'getInitialState') || {};\r\n\t\thook(this, 'initialize');\r\n\t}\r\n\r\n\t/** Returns a `boolean` value indicating if the component should re-render when receiving the given `props` and `state`.\r\n\t *\t@param {object} props\r\n\t *\t@param {object} state\r\n\t */\r\n\tshouldComponentUpdate(props, state) {\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/** Update component state by copying values from `state` to `this.state`.\r\n\t *\t@param {object} state\r\n\t */\r\n\tsetState(state) {\r\n\t\textend(this.state, state);\r\n\t\tthis.triggerRender();\r\n\t}\r\n\r\n\t/** Set `props` for the component.\r\n\t*\t@param {object} props\r\n\t*\t@param {object} [opts]\r\n\t*\t@param {object} [opts.renderSync] - If `true` and {@link options.syncComponentUpdates} is `true`, triggers synchronous rendering.\r\n\t*\t@param {object} [opts.render=true] - If `false`, no render will be triggered.\r\n\t */\r\n\tsetProps(props, opts=EMPTY) {\r\n\t\tlet d = this._disableRendering===true;\r\n\t\tthis._disableRendering = true;\r\n\t\thook(this, 'componentWillReceiveProps', props, this.props);\r\n\t\tthis.nextProps = props;\r\n\t\tthis._disableRendering = d;\r\n\t\tif (opts.renderSync===true && options.syncComponentUpdates===true) {\r\n\t\t\tthis._render();\r\n\t\t}\r\n\t\telse if (opts.render!==false) {\r\n\t\t\tthis.triggerRender();\r\n\t\t}\r\n\t}\r\n\r\n\t/** Mark component as dirty and queue up a render. */\r\n\ttriggerRender() {\r\n\t\tif (this._dirty!==true) {\r\n\t\t\tthis._dirty = true;\r\n\t\t\trenderQueue.add(this);\r\n\t\t}\r\n\t}\r\n\r\n\t/** Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\r\n\t *\tVirtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\r\n\t *\t@returns VNode\r\n\t */\r\n\trender(props, state) {\r\n\t\treturn h('div', { component:this.constructor.name }, props.children);\r\n\t}\r\n\r\n\t/** @private */\r\n\t_render(opts=EMPTY) {\r\n\t\tif (this._disableRendering===true) return;\r\n\r\n\t\tthis._dirty = false;\r\n\r\n\t\tif (this.base && hook(this, 'shouldComponentUpdate', this.props, this.state)===false) {\r\n\t\t\tthis.props = this.nextProps;\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.props = this.nextProps;\r\n\r\n\t\thook(this, 'componentWillUpdate');\r\n\r\n\t\tlet rendered = hook(this, 'render', this.props, this.state);\r\n\r\n\t\tif (this.base || opts.build===true) {\r\n\t\t\tlet base = build(this.base, rendered || EMPTY_BASE, this);\r\n\t\t\tif (this.base && base!==this.base) {\r\n\t\t\t\tlet p = this.base.parentNode;\r\n\t\t\t\tif (p) p.replaceChild(base, this.base);\r\n\t\t\t}\r\n\t\t\tthis.base = base;\r\n\t\t}\r\n\r\n\t\thook(this, 'componentDidUpdate');\r\n\t}\r\n}\r\n\r\n\r\n\r\n/** @public JSX/hyperscript reviver\r\n *\t@see http://jasonformat.com/wtf-is-jsx\r\n *  @example\r\n *  /** @jsx h *\\/\r\n *  import { render, h } from 'preact';\r\n *  render(<span>foo</span>, document.body);\r\n */\r\nexport function h(nodeName, attributes, ...args) {\r\n\tlet children,\r\n\t\tsharedArr = [],\r\n\t\tlen = args.length,\r\n\t\tarr, lastSimple;\r\n\tif (len) {\r\n\t\tchildren = [];\r\n\t\tfor (let i=0; i<len; i++) {\r\n\t\t\tlet p = args[i];\r\n\t\t\tif (p===null || p===undefined) continue;\r\n\t\t\tif (p.join) {\t\t\t// Array.isArray(args[i])\r\n\t\t\t\tarr = p;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tarr = sharedArr;\r\n\t\t\t\tarr[0] = p;\r\n\t\t\t}\r\n\t\t\tfor (let j=0; j<arr.length; j++) {\r\n\t\t\t\tlet child = arr[j],\r\n\t\t\t\t\tsimple = notEmpty(child) && !isVNode(child);\r\n\t\t\t\tif (simple) child = String(child);\r\n\t\t\t\tif (simple && lastSimple) {\r\n\t\t\t\t\tchildren[children.length-1] += child;\r\n\t\t\t\t}\r\n\t\t\t\telse if (notEmpty(child)) {\r\n\t\t\t\t\tchildren.push(child);\r\n\t\t\t\t}\r\n\t\t\t\tlastSimple = simple;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif (attributes && attributes.children) {\r\n\t\tdelete attributes.children;\r\n\t}\r\n\r\n\tlet p = new VNode(nodeName, attributes || undefined, children || undefined);\r\n\thook(hooks, 'vnode', p);\r\n\treturn p;\r\n}\r\n\r\n\r\n/** Virtual DOM Node */\r\nexport class VNode {\r\n\tconstructor(nodeName, attributes, children) {\r\n\t\t/** @type {string|class} */\r\n\t\tthis.nodeName = nodeName;\r\n\r\n\t\t/** @type {object<string>|undefined} */\r\n\t\tthis.attributes = attributes;\r\n\r\n\t\t/** @type {array<VNode>|undefined} */\r\n\t\tthis.children = children;\r\n\t}\r\n}\r\nVNode.prototype.__isVNode = true;\r\n\r\n\r\n/** @private Invoke a \"hook\" method with arguments if it exists. */\r\nfunction hook(obj, name, ...args) {\r\n\tlet fn = obj[name];\r\n\tif (fn && typeof fn==='function') return fn.apply(obj, args);\r\n}\r\n\r\n\r\n/** @private Fast check if an object is a VNode. */\r\nfunction isVNode(obj) {\r\n\treturn obj && obj.__isVNode===true;\r\n}\r\n\r\n\r\n/** @private Check if a value is `null` or `undefined`. */\r\nfunction notEmpty(x) {\r\n\treturn x!==null && x!==undefined;\r\n}\r\n\r\n\r\n/** @private Check if two nodes are equivalent. */\r\nfunction isSameNodeType(node, vnode) {\r\n\tif (node.nodeType===3) {\r\n\t\treturn typeof vnode==='string';\r\n\t}\r\n\tlet nodeName = vnode.nodeName;\r\n\tif (typeof nodeName==='function') return node._componentConstructor===nodeName;\r\n\treturn node.nodeName.toLowerCase()===nodeName;\r\n}\r\n\r\n\r\n/** @private Apply the component referenced by a VNode to the DOM. */\r\nfunction buildComponentFromVNode(dom, vnode) {\r\n\tlet c = dom && dom._component;\r\n\r\n\tif (c && dom._componentConstructor===vnode.nodeName) {\r\n\t\tlet props = getNodeProps(vnode);\r\n\t\tc.setProps(props, SYNC_RENDER);\r\n\t\treturn dom;\r\n\t}\r\n\telse {\r\n\t\tif (c) unmountComponent(dom, c);\r\n\t\treturn createComponentFromVNode(vnode);\r\n\t}\r\n}\r\n\r\n\r\n/** @private Instantiate and render a Component, given a VNode whose nodeName is a constructor. */\r\nfunction createComponentFromVNode(vnode) {\r\n\tlet component = componentRecycler.create(vnode.nodeName);\r\n\r\n\tlet props = getNodeProps(vnode);\r\n\tcomponent.setProps(props, NO_RENDER);\r\n\tcomponent._render(DOM_RENDER);\r\n\r\n\tlet node = component.base;\r\n\tnode._component = component;\r\n\tnode._componentConstructor = vnode.nodeName;\r\n\r\n\treturn node;\r\n}\r\n\r\n\r\n/** @private Remove a component from the DOM and recycle it. */\r\nfunction unmountComponent(dom, component) {\r\n\tconsole.warn('unmounting mismatched component', component);\r\n\r\n\tdelete dom._component;\r\n\thook(component, 'componentWillUnmount');\r\n\tlet base = component.base;\r\n\tif (base && base.parentNode) {\r\n\t\tbase.parentNode.removeChild(base);\r\n\t}\r\n\thook(component, 'componentDidUnmount');\r\n\tcomponentRecycler.collect(component);\r\n}\r\n\r\n\r\n/** @private Apply differences in a given vnode (and it's deep children) to a real DOM Node. */\r\nfunction build(dom, vnode, rootComponent) {\r\n\tlet out = dom,\r\n\t\tnodeName = vnode.nodeName;\r\n\r\n\tif (typeof nodeName==='function') {\r\n\t\treturn buildComponentFromVNode(dom, vnode);\r\n\t}\r\n\r\n\tif (typeof vnode==='string') {\r\n\t\tif (dom) {\r\n\t\t\tif (dom.nodeType===3) {\r\n\t\t\t\tdom.textContent = vnode;\r\n\t\t\t\treturn dom;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tif (dom.nodeType===1) recycler.collect(dom);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn document.createTextNode(vnode);\r\n\t}\r\n\r\n\tif (nodeName===null || nodeName===undefined) {\r\n\t\tnodeName = 'x-undefined-element';\r\n\t}\r\n\r\n\tif (!dom) {\r\n\t\tout = recycler.create(nodeName);\r\n\t}\r\n\telse if (dom.nodeName.toLowerCase()!==nodeName) {\r\n\t\tout = recycler.create(nodeName);\r\n\t\tappendChildren(out, slice.call(dom.childNodes));\r\n\t\t// reclaim element nodes\r\n\t\tif (dom.nodeType===1) recycler.collect(dom);\r\n\t}\r\n\telse if (dom._component && dom._component!==rootComponent) {\r\n\t\tunmountComponent(dom, dom._component);\r\n\t}\r\n\r\n\t// apply attributes\r\n\tlet old = getNodeAttributes(out) || EMPTY,\r\n\t\tattrs = vnode.attributes || EMPTY;\r\n\r\n\t// removed attributes\r\n\tif (old!==EMPTY) {\r\n\t\tfor (let name in old) {\r\n\t\t\tif (old.hasOwnProperty(name)) {\r\n\t\t\t\tlet o = attrs[name];\r\n\t\t\t\tif (o===undefined || o===null || o===false) {\r\n\t\t\t\t\tsetAccessor(out, name, null, old[name]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// new & updated attributes\r\n\tif (attrs!==EMPTY) {\r\n\t\tfor (let name in attrs) {\r\n\t\t\tif (attrs.hasOwnProperty(name)) {\r\n\t\t\t\tlet value = attrs[name];\r\n\t\t\t\tif (value!==undefined && value!==null && value!==false) {\r\n\t\t\t\t\tlet prev = getAccessor(out, name, old[name]);\r\n\t\t\t\t\tif (value!==prev) {\r\n\t\t\t\t\t\tsetAccessor(out, name, value, prev);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tlet children = slice.call(out.childNodes);\r\n\tlet keyed = {};\r\n\tfor (let i=children.length; i--; ) {\r\n\t\tlet t = children[i].nodeType;\r\n\t\tlet key;\r\n\t\tif (t===3) {\r\n\t\t\tkey = t.key;\r\n\t\t}\r\n\t\telse if (t===1) {\r\n\t\t\tkey = children[i].getAttribute('key');\r\n\t\t}\r\n\t\telse {\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (key) keyed[key] = children.splice(i, 1)[0];\r\n\t}\r\n\tlet newChildren = [];\r\n\r\n\tif (vnode.children) {\r\n\t\tfor (let i=0, vlen=vnode.children.length; i<vlen; i++) {\r\n\t\t\tlet vchild = vnode.children[i];\r\n\t\t\tlet attrs = vchild.attributes;\r\n\t\t\tlet key, child;\r\n\t\t\tif (attrs) {\r\n\t\t\t\tkey = attrs.key;\r\n\t\t\t\tchild = key && keyed[key];\r\n\t\t\t}\r\n\r\n\t\t\t// attempt to pluck a node of the same type from the existing children\r\n\t\t\tif (!child) {\r\n\t\t\t\tlet len = children.length;\r\n\t\t\t\tif (children.length) {\r\n\t\t\t\t\tfor (let j=0; j<len; j++) {\r\n\t\t\t\t\t\tif (isSameNodeType(children[j], vchild)) {\r\n\t\t\t\t\t\t\tchild = children.splice(j, 1)[0];\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// morph the matched/found/created DOM child to match vchild (deep)\r\n\t\t\tnewChildren.push(build(child, vchild));\r\n\t\t}\r\n\t}\r\n\r\n\t// apply the constructed/enhanced ordered list to the parent\r\n\tfor (let i=0, len=newChildren.length; i<len; i++) {\r\n\t\t// we're intentionally re-referencing out.childNodes here as it is a live array (akin to live NodeList)\r\n\t\tif (out.childNodes[i]!==newChildren[i]) {\r\n\t\t\tlet child = newChildren[i],\r\n\t\t\t\tc = child._component,\r\n\t\t\t\tnext = out.childNodes[i+1];\r\n\t\t\tif (c) hook(c, 'componentWillMount');\r\n\t\t\tif (next) {\r\n\t\t\t\tout.insertBefore(child, next);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tout.appendChild(child);\r\n\t\t\t}\r\n\t\t\tif (c) hook(c, 'componentDidMount');\r\n\t\t}\r\n\t}\r\n\r\n\t// remove orphaned children\r\n\tfor (let i=0, len=children.length; i<len; i++) {\r\n\t\tlet child = children[i],\r\n\t\t\tc = child._component;\r\n\t\tif (c) hook(c, 'componentWillUnmount');\r\n\t\tchild.parentNode.removeChild(child);\r\n\t\tif (c) {\r\n\t\t\thook(c, 'componentDidUnmount');\r\n\t\t\tcomponentRecycler.collect(c);\r\n\t\t}\r\n\t\telse if (child.nodeType===1) {\r\n\t\t\trecycler.collect(child);\r\n\t\t}\r\n\t}\r\n\r\n\treturn out;\r\n}\r\n\r\n\r\n/** @private Managed re-rendering queue for dirty components. */\r\nlet renderQueue = {\r\n\titems: [],\r\n\titemsOffline: [],\r\n\tpending: false,\r\n\tadd(component) {\r\n\t\tif (renderQueue.items.push(component)!==1) return;\r\n\r\n\t\tlet d = hooks.debounceRendering;\r\n\t\tif (d) d(renderQueue.process);\r\n\t\telse setTimeout(renderQueue.process, 0);\r\n\t},\r\n\tprocess() {\r\n\t\tlet items = renderQueue.items,\r\n\t\t\tlen = items.length;\r\n\t\tif (!len) return;\r\n\t\trenderQueue.items = renderQueue.itemsOffline;\r\n\t\trenderQueue.items.length = 0;\r\n\t\trenderQueue.itemsOffline = items;\r\n\t\twhile (len--) {\r\n\t\t\tif (items[len]._dirty) {\r\n\t\t\t\titems[len]._render();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\n/** @private @function Trigger all pending render() calls. */\r\nlet rerender = renderQueue.process\r\n\r\n\r\n/** @private DOM node pool, keyed on nodeName. */\r\nlet recycler = {\r\n\tnodes: {},\r\n\tcollect(node) {\r\n\t\trecycler.clean(node);\r\n\t\tlet name = recycler.normalizeName(node.nodeName),\r\n\t\t\tlist = recycler.nodes[name];\r\n\t\tif (list) list.push(node);\r\n\t\telse recycler.nodes[name] = [node];\r\n\t},\r\n\tcreate(nodeName) {\r\n\t\tlet name = recycler.normalizeName(nodeName),\r\n\t\t\tlist = recycler.nodes[name];\r\n\t\treturn list && list.pop() || document.createElement(nodeName);\r\n\t},\r\n\tclean(node) {\r\n\t\tnode.remove();\r\n\t\tlet len = node.attributes && node.attributes.length;\r\n\t\tif (len) for (let i=len; i--; ) {\r\n\t\t\tnode.removeAttribute(node.attributes[i].name);\r\n\t\t}\r\n\r\n\t\t// if (node.childNodes.length>0) {\r\n\t\t// \tconsole.warn(`Warning: Recycler collecting <${node.nodeName}> with ${node.childNodes.length} children.`);\r\n\t\t// \tslice.call(node.childNodes).forEach(recycler.collect);\r\n\t\t// }\r\n\t},\r\n\tnormalizeName: memoize(name => name.toUpperCase())\r\n};\r\n\r\n\r\n/** @private Retains a pool of Components for re-use, keyed on component name. */\r\nlet componentRecycler = {\r\n\tcomponents: {},\r\n\tcollect(component) {\r\n\t\tlet name = component.constructor.name;\r\n\t\tlet list = componentRecycler.components[name] || (componentRecycler.components[name] = []);\r\n\t\tlist.push(component);\r\n\t},\r\n\tcreate(ctor) {\r\n\t\tlet name = ctor.name,\r\n\t\t\tlist = componentRecycler.components[name];\r\n\t\tif (list && list.length) {\r\n\t\t\treturn list.splice(0, 1)[0];\r\n\t\t}\r\n\t\treturn new ctor();\r\n\t}\r\n};\r\n\r\n\r\n/** @private Append children to a Node.\r\n *\tUses a Document Fragment to batch when appending 2 or more children\r\n */\r\nfunction appendChildren(parent, children) {\r\n\tlet len = children.length;\r\n\tif (len<=2) {\r\n\t\tparent.appendChild(children[0]);\r\n\t\tif (len===2) parent.appendChild(children[1]);\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet frag = document.createDocumentFragment();\r\n\tfor (let i=0; i<len; i++) frag.appendChild(children[i]);\r\n\tparent.appendChild(frag);\r\n}\r\n\r\n\r\n/** @private Get the value of a rendered attribute */\r\nfunction getAccessor(node, name, value) {\r\n\tif (name==='class') return node.className;\r\n\tif (name==='style') return node.style.cssText;\r\n\treturn value;\r\n}\r\n\r\n\r\n/** @private Set a named attribute on the given Node, with special behavior for some names and event handlers.\r\n *\tIf `value` is `null`, the attribute/handler will be removed.\r\n */\r\nfunction setAccessor(node, name, value, old) {\r\n\tif (name==='class') {\r\n\t\tnode.className = value;\r\n\t}\r\n\telse if (name==='style') {\r\n\t\tnode.style.cssText = value;\r\n\t}\r\n\telse {\r\n\t\tsetComplexAccessor(node, name, value, old);\r\n\t}\r\n}\r\n\r\n\r\n/** @private For props without explicit behavior, apply to a Node as event handlers or attributes. */\r\nfunction setComplexAccessor(node, name, value, old) {\r\n\tif (name.substring(0,2)==='on') {\r\n\t\tlet type = name.substring(2).toLowerCase(),\r\n\t\t\tl = node._listeners || (node._listeners = {});\r\n\t\tif (!l[type]) node.addEventListener(type, eventProxy);\r\n\t\tl[type] = value;\r\n\t\t// @TODO automatically remove proxy event listener when no handlers are left\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet type = typeof value;\r\n\tif (value===null) {\r\n\t\tnode.removeAttribute(name);\r\n\t}\r\n\telse if (type!=='function' && type!=='object') {\r\n\t\tnode.setAttribute(name, value);\r\n\t}\r\n}\r\n\r\n\r\n/** @private Proxy an event to hooked event handlers */\r\nfunction eventProxy(e) {\r\n\tlet l = this._listeners,\r\n\t\tfn = l[normalizeEventType(e.type)];\r\n\tif (fn) return fn.call(this, hook(hooks, 'event', e) || e);\r\n}\r\n\r\n/** @private @function Normalize an event type/name to lowercase */\r\nlet normalizeEventType = memoize(type => type.toLowerCase());\r\n\r\n\r\n\r\n/** @private Get a node's attributes as a hashmap, regardless of type. */\r\nfunction getNodeAttributes(node) {\r\n\tlet list = node.attributes;\r\n\tif (!list || !list.getNamedItem) return list;\r\n\tif (list.length) return getAttributesAsObject(list);\r\n}\r\n\r\n\r\n/** @private Convert a DOM `.attributes` NamedNodeMap to a hashmap. */\r\nfunction getAttributesAsObject(list) {\r\n\tlet attrs = {};\r\n\tfor (let i=list.length; i--; ) {\r\n\t\tlet item = list[i];\r\n\t\tattrs[item.name] = item.value;\r\n\t}\r\n\treturn attrs;\r\n}\r\n\r\n\r\n/** @private Reconstruct `props` from a VNode */\r\nfunction getNodeProps(vnode) {\r\n\tlet props = extend({}, vnode.attributes);\r\n\tif (vnode.children) {\r\n\t\tprops.children = vnode.children;\r\n\t}\r\n\tif (vnode.text) {\r\n\t\tprops._content = vnode.text;\r\n\t}\r\n\treturn props;\r\n}\r\n\r\n\r\n/** @private Convert a hashmap of styles to CSSText */\r\nfunction styleObjToCss(s) {\r\n\tlet str = '',\r\n\t\tsep = ': ',\r\n\t\tterm = '; ';\r\n\tfor (let prop in s) {\r\n\t\tif (s.hasOwnProperty(prop)) {\r\n\t\t\tlet val = s[prop];\r\n\t\t\tstr += jsToCss(prop);\r\n\t\t\tstr += sep;\r\n\t\t\tstr += val;\r\n\t\t\tif (typeof val==='number' && !NON_DIMENSION_PROPS.hasOwnProperty(prop)) {\r\n\t\t\t\tstr += 'px';\r\n\t\t\t}\r\n\t\t\tstr += term;\r\n\t\t}\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n\r\n/** @private Convert a hashmap of CSS classes to a space-delimited className string */\r\nfunction hashToClassName(c) {\r\n\tlet str = '';\r\n\tfor (let prop in c) {\r\n\t\tif (c[prop]) {\r\n\t\t\tif (str) str += ' ';\r\n\t\t\tstr += prop;\r\n\t\t}\r\n\t}\r\n\treturn str;\r\n}\r\n\r\n\r\n/** @private @function Convert a JavaScript camel-case CSS property name to a CSS property name */\r\nlet jsToCss = memoize( s => s.replace(/([A-Z])/,'-$1').toLowerCase() );\r\n\r\n\r\n/** @private Copy own-properties from `props` onto `obj`. Returns `obj`. */\r\nfunction extend(obj, props) {\r\n\tfor (let i in props) if (props.hasOwnProperty(i)) {\r\n\t\tobj[i] = props[i];\r\n\t}\r\n\treturn obj;\r\n}\r\n\r\n\r\nexport { options, hooks, rerender };\r\nexport default { options, hooks, render, rerender, h, Component };\r\n","import preact, { Component, hooks, h } from \"../src/preact\";\r\n\r\n// const App = () => {\r\n//   return <Component>hello world</Component>;\r\n// };\r\n\r\npreact.render(h('div', null, 'Hello Mere'), document.body);\r\n"],"names":["EMPTY","NO_RENDER","render","SYNC_RENDER","renderSync","DOM_RENDER","build","NON_DIMENSION_PROPS","split","forEach","k","slice","Array","prototype","memoize","fn","mem","hasOwnProperty","hooks","attributes","s","style","substring","str","prop","val","jsToCss","styleObjToCss","c","className","hashToClassName","h","nodeName","children","arr","lastSimple","sharedArr","len","i","p","join","j","length","child","simple","notEmpty","isVNode","String","push","VNode","undefined","hook","this","obj","name","args","apply","__isVNode","x","isSameNodeType","node","vnode","nodeType","_componentConstructor","toLowerCase","unmountComponent","dom","component","console","warn","_component","base","parentNode","removeChild","componentRecycler","collect","rootComponent","out","props","getNodeProps","setProps","create","_render","createComponentFromVNode","buildComponentFromVNode","textContent","recycler","document","createTextNode","parent","appendChild","frag","createDocumentFragment","appendChildren","call","childNodes","list","old","getNamedItem","attrs","item","value","getAttributesAsObject","o","setAccessor","prev","getAccessor","keyed","t","key","getAttribute","splice","newChildren","vlen","vchild","next","insertBefore","renderQueue","items","itemsOffline","pending","add","d","debounceRendering","process","setTimeout","_dirty","nodes","clean","normalizeName","pop","createElement","remove","removeAttribute","toUpperCase","components","constructor","ctor","cssText","type","l","_listeners","addEventListener","eventProxy","setAttribute","setComplexAccessor","e","normalizeEventType","extend","text","_content","built","replace","body"],"sourceRoot":""}